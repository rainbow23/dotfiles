#!/bin/zsh
export XDG_CONFIG_HOME=$HOME/.config
## -------------------------------------
# zsh-completions
## -------------------------------------
# COMPLETIONS=$HOME/.zsh/completions
# if [ -e $COMPLETIONS ]; then
#   fpath=($COMPLETIONS $fpath)
# fi
# source $COMPLETIONS/docker-fzf-completion/docker-fzf.zsh

## -------------------------------------
# easy-oneliner
## -------------------------------------
if [ ! -d $HOME/.easy-oneliner ] ; then
  git clone https://github.com/rainbow23/easy-oneliner.git ~/.easy-oneliner
  source $HOME/.easy-oneliner/easy-oneliner.zsh
else
  source $HOME/.easy-oneliner/easy-oneliner.zsh
fi

# -------------------------------------
# zshのオプション
# -------------------------------------
# コマンド履歴
HISTFILE=~/.zsh_history
HISTSIZE=6000000
SAVEHIST=6000000
setopt hist_ignore_dups # 直前と同じコマンドをヒストリに追加しない
setopt share_history    # 異なるウィンドウでコマンドヒストリを共有する
setopt hist_no_store    # historyコマンドは履歴に登録しない
setopt auto_menu        # タブで補完候補を表示する
setopt auto_list        # 補完候補が複数ある時に、一覧表示

## 入力しているコマンド名が間違っている場合にもしかして：を出す。
setopt correct
# ビープを鳴らさない
setopt no_beep
## 色を使う
setopt prompt_subst
## ^Dでログアウトしない。
setopt ignoreeof
## バックグラウンドジョブが終了したらすぐに知らせる。
setopt no_tify

# -------------------------------------
# プロンプト
# -------------------------------------
# Edit line in vim with ctrl-e:
# autoload edit-command-line; zle -N edit-command-line
# bindkey '^e' edit-command-line

# autoload -U promptinit; promptinit
# autoload -Uz colors; colors
# autoload -Uz vcs_info
# autoload -Uz is-at-least
# # begin VCS
# zstyle ":vcs_info:*" enable git svn hg bzr
# zstyle ":vcs_info:*" formats "(%s)-[%b]"
# zstyle ":vcs_info:*" actionformats "(%s)-[%b|%a]"
# zstyle ":vcs_info:(svn|bzr):*" branchformat "%b:r%r"
# zstyle ":vcs_info:bzr:*" use-simple true
# zstyle ":vcs_info:*" max-exports 6

# if is-at-least 4.3.10; then
#     zstyle ":vcs_info:git:*" check-for-changes true # commitしていないのをチェック
#     zstyle ":vcs_info:git:*" stagedstr "<S>"
#     zstyle ":vcs_info:git:*" unstagedstr "<U>"
#     zstyle ":vcs_info:git:*" formats "(%b) %c%u"
#     zstyle ":vcs_info:git:*" actionformats "(%s)-[%b|%a] %c%u"
# fi

# function vcs_prompt_info() {
#     LANG=en_US.UTF-8 vcs_info
#     [[ -n "$vcs_info_msg_0_" ]] && echo -n " %{$fg[yellow]%}$vcs_info_msg_0_%f"
# }
# # end VCS

# OK="^_^ "
# NG="X_X "
# PROMPT=""
# PROMPT+="%(?.%F{green}$OK%f.%F{red}$NG%f) "
# PROMPT+="%F{blue}%~%f"
# PROMPT+="\$(vcs_prompt_info)"
# PROMPT+="
# "
# PROMPT+="%% "
# RPROMPT="[%*]"

# -------------------------------------
# キーバインド vi mode
# -------------------------------------
bindkey -v
# mode change time to 0.1seconds
# export KEYTIMEOUT=1
# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select

function cdup() {
   echo
   cd ..
   zle reset-prompt
}
zle -N cdup
bindkey '^K' cdup
bindkey "^R" history-incremental-search-backward

# -------------------------------------
# その他
# -------------------------------------
# cdしたあとで、自動的に ls する
function chpwd() { ls -ltr }
# iTerm2のタブ名を変更する
function title {
    echo -ne "\033]0;"$*"\007"
}


# -------------------------------------
# source
# -------------------------------------
source $HOME/dotfiles/source.sh
source $HOME/dotfiles/alias.sh
source $HOME/dotfiles/fzf.sh
source $HOME/dotfiles/mru.sh
# source $HOME/dotfiles/zplugin.sh

## 補完機能の強化
# autoload -U compinit && compinit
# # 補完候補に色つける
# autoload -U colors && colors
# zstyle ':completion:*' list-colors "${LS_COLORS}"

# zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' '+m:{A-Z}={a-z}' # 大文字と小文字の区別なし
# zstyle ':completion:*:default' menu select=2
# zstyle ':completion:*:processes' menu yes select=2                      # kill コマンドのようなものに関しては候補をタブで選択できるようにする

# -------------------------------------
# docker補完設定
# -------------------------------------
ZSHCOMPLETION=$HOME/.zsh/completion
if [ ! -d $ZSHCOMPLETION ]; then
  mkdir -p $ZSHCOMPLETION
fi
# https://docs.docker.com/compose/completion/
if [ ! -f $ZSHCOMPLETION/_docker ] ; then
  curl -L https://raw.githubusercontent.com/docker/cli/master/contrib/completion/zsh/_docker > $ZSHCOMPLETION/_docker
fi
# https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker
if [ ! -f $ZSHCOMPLETION/_docker-compose ] ; then
  curl -L https://raw.githubusercontent.com/docker/compose/1.25.0/contrib/completion/zsh/_docker-compose > $ZSHCOMPLETION/_docker-compose
fi
fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit -i

# -------------------------------------
# ZSH_AUTOSUGGEST
# -------------------------------------
# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=45,bold"
# bindkey '^ ' autosuggest-accept
# bindkey '^f' autosuggest-fetch
# bindkey '^d' autosuggest-disable


## -------------------------------------
# FZF-TAB
## -------------------------------------
FZF_TAB=$HOME/.fzf-tab
if [ ! -d $FZF_TAB ] ; then
  mkdir $FZF_TAB
  git clone https://github.com/Aloxaf/fzf-tab.git $FZF_TAB
fi

if [ -f $FZF_TAB/fzf-tab.plugin.zsh ] ; then
  echo "check fzf-tab"
  source $FZF_TAB/fzf-tab.plugin.zsh
fi

autoload -U compinit && compinit
